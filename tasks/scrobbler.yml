---
- name: Install mocp scrobbler.
  become: yes
  get_url:
    url: 'https://raw.githubusercontent.com/fluxid/mocp-scrobbler/master/mocp-scrobbler.py'
    dest: /usr/local/bin/mocp-scrobbler
    # The git repo hasn't changed in 6 years, so version-locking on the most recent commit.
    sha256sum: d6f8e9c28473489e20394e051f8ef800f1c2ac5e8185d6052b2b2aef4b1e17f7
    mode: '0755'
    owner: root
    group: root

- name: Create scrobbler config directory.
  file:
    state: directory
    path: .mocpscrob

# On first run, the scrobbler script will convert the plaintext
# password value `password` to `password_md5` with a hashed value.
- name: Check if scrobbler password is already hashed.
  command: grep -qP '^password_md5' .mocpscrob/config
  changed_when: false # read-only task
  ignore_errors: true # file might not exist yet
  register: scrobbler_password_hash_check_result

- name: Write scrobbler config (username).
  ini_file:
    dest: .mocpscrob/config
    backup: yes
    create: yes
    section: scrobbler
    option: login
    value: "{{ mocp_scrobbler_username }}"

- name: Write scrobbler config (hashed password).
  ini_file:
    dest: .mocpscrob/config
    backup: yes
    create: yes
    section: scrobbler
    option: password
    value: "{{ mocp_scrobbler_password }}"
  no_log: true
  when: scrobbler_password_hash_check_result.rc != 0

- name: Create systemd user directory.
  file:
    state: directory
    path: .config/systemd/user

- name: Install mocp scrobbler systemd unit file.
  copy:
    src: scrobbler.service
    dest: .config/systemd/user/scrobbler.service
    mode: "0600"

- name: Start scrobbler service.
  systemd:
    user: yes
    name: scrobbler.service
    state: started
    enabled: yes
